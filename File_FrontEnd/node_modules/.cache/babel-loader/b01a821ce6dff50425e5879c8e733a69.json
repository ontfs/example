{"remainingRequest":"/Users/ericyang/Desktop/test-demo/file_demo/node_modules/babel-loader/lib/index.js!/Users/ericyang/Desktop/test-demo/file_demo/src/api/request.js","dependencies":[{"path":"/Users/ericyang/Desktop/test-demo/file_demo/src/api/request.js","mtime":1578903151725},{"path":"/Users/ericyang/Desktop/test-demo/file_demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericyang/Desktop/test-demo/file_demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsKdmFyIHNlcnZpY2UgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6IHByb2Nlc3MuZW52LlZVRV9BUFBfQVBJLAogIC8vIHVybCA9IGJhc2UgdXJsICsgcmVxdWVzdCB1cmwKICAvLyB3aXRoQ3JlZGVudGlhbHM6IHRydWUsIC8vIHNlbmQgY29va2llcyB3aGVuIGNyb3NzLWRvbWFpbiByZXF1ZXN0cwogIHRpbWVvdXQ6IDMwMDAwIC8vIHJlcXVlc3QgdGltZW91dAoKfSk7IC8vIHJlcXVlc3QgaW50ZXJjZXB0b3IKCnNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAvLyBkbyBzb21ldGhpbmcgYmVmb3JlIHJlcXVlc3QgaXMgc2VudAogIGNvbmZpZy5kYXRhID0gSlNPTi5zdHJpbmdpZnkoY29uZmlnLmRhdGEpOwogIGNvbmZpZy5oZWFkZXJzID0gewogICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogIH07CiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8gZG8gc29tZXRoaW5nIHdpdGggcmVxdWVzdCBlcnJvcgogIGNvbnNvbGUubG9nKGVycm9yKTsgLy8gZm9yIGRlYnVnCgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyByZXNwb25zZSBpbnRlcmNlcHRvcgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIHZhciByZXMgPSByZXNwb25zZS5kYXRhOwogIHJldHVybiByZXM7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHZhciByZXN0ID0gZXJyb3IucmVzcG9uc2U7CiAgY29uc29sZS5lcnJvcignZXJyJyArIGVycm9yKTsgLy8gZm9yIGRlYnVnCgogIGlmIChyZXN0KSB7CiAgICBpZiAocmVzdC5zdGF0dXMgPT09IDQwMCkgewogICAgICAvLyDmj5DnpLrplJnor68KICAgICAgTWVzc2FnZSh7CiAgICAgICAgbWVzc2FnZTogcmVzdC5kYXRhLmRlc2MsCiAgICAgICAgdHlwZTogJ2Vycm9yJwogICAgICB9KTsKICAgIH0KICB9IGVsc2UgewogICAgTWVzc2FnZSh7CiAgICAgIG1lc3NhZ2U6ICdBcGkgRXJyb3IsIFBsZWFzZSBUcnkgQWdhaW4hJywKICAgICAgdHlwZTogJ2Vycm9yJwogICAgfSk7CiAgfQoKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsKZXhwb3J0IGRlZmF1bHQgc2VydmljZTs="},{"version":3,"sources":["/Users/ericyang/Desktop/test-demo/file_demo/src/api/request.js"],"names":["axios","Message","service","create","baseURL","process","env","VUE_APP_API","timeout","interceptors","request","use","config","data","JSON","stringify","headers","error","console","log","Promise","reject","response","res","rest","status","message","desc","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,WADM;AACO;AAClC;AACAC,EAAAA,OAAO,EAAE,KAHkB,CAGZ;;AAHY,CAAb,CAAhB,C,CAMA;;AACAN,OAAO,CAACO,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACR;AACAA,EAAAA,MAAM,CAACC,IAAP,GAAcC,IAAI,CAACC,SAAL,CAAeH,MAAM,CAACC,IAAtB,CAAd;AACAD,EAAAA,MAAM,CAACI,OAAP,GAAiB;AACf,oBAAgB;AADD,GAAjB;AAGA,SAAOJ,MAAP;AACD,CARH,EASE,UAAAK,KAAK,EAAI;AACP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFO,CAEY;;AACnB,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAbH,E,CAgBA;;AACAf,OAAO,CAACO,YAAR,CAAqBa,QAArB,CAA8BX,GAA9B,CACE,UAAAW,QAAQ,EAAI;AACV,MAAMC,GAAG,GAAGD,QAAQ,CAACT,IAArB;AACA,SAAOU,GAAP;AACD,CAJH,EAKE,UAAAN,KAAK,EAAI;AACP,MAAMO,IAAI,GAAGP,KAAK,CAACK,QAAnB;AACAJ,EAAAA,OAAO,CAACD,KAAR,CAAc,QAAQA,KAAtB,EAFO,CAEsB;;AAC7B,MAAIO,IAAJ,EAAU;AACR,QAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvB;AACAxB,MAAAA,OAAO,CAAC;AAAEyB,QAAAA,OAAO,EAAEF,IAAI,CAACX,IAAL,CAAUc,IAArB;AAA2BC,QAAAA,IAAI,EAAE;AAAjC,OAAD,CAAP;AACD;AACF,GALD,MAKO;AACL3B,IAAAA,OAAO,CAAC;AAAEyB,MAAAA,OAAO,EAAE,8BAAX;AAA2CE,MAAAA,IAAI,EAAE;AAAjD,KAAD,CAAP;AACD;;AACD,SAAOR,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAjBH;AAoBA,eAAef,OAAf","sourcesContent":["import axios from 'axios'\nimport { Message } from 'element-ui'\n\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_API, // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 30000 // request timeout\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  config => {\n    // do something before request is sent\n    config.data = JSON.stringify(config.data)\n    config.headers = {\n      'Content-Type': 'application/json'\n    }\n    return config\n  },\n  error => {\n    // do something with request error\n    console.log(error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n  response => {\n    const res = response.data\n    return res\n  },\n  error => {\n    const rest = error.response\n    console.error('err' + error) // for debug\n    if (rest) {\n      if (rest.status === 400) {\n        // 提示错误\n        Message({ message: rest.data.desc, type: 'error' })\n      }\n    } else {\n      Message({ message: 'Api Error, Please Try Again!', type: 'error' })\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"]}]}