{"remainingRequest":"/Users/ericyang/Desktop/test-demo/file_demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ericyang/Desktop/test-demo/file_demo/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ericyang/Desktop/test-demo/file_demo/src/views/Home.vue","mtime":1578907378170},{"path":"/Users/ericyang/Desktop/test-demo/file_demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericyang/Desktop/test-demo/file_demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ericyang/Desktop/test-demo/file_demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericyang/Desktop/test-demo/file_demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <el-card class=\"home_card accout_header\">\n      <h1>\n        <img src=\"../assets/ontfsb.svg\" alt=\"\" />\n      </h1>\n      <span class=\"account_name\">Account: {{ userName }}</span>\n      <span class=\"account_name\">ONT ID: {{ ontId }}</span>\n      <el-button type=\"text\" @click=\"logOut\">Sign out</el-button>\n    </el-card>\n    <el-card class=\"home_card\">\n      <div class=\"file_wrap\">\n        <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"180px\">\n          <el-form-item label=\"File encryption code\" prop=\"password\">\n            <el-input\n              autocomplete=\"off\"\n              type=\"password\"\n              v-model=\"form.password\"\n              placeholder=\"Create an encryption code\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item label=\"File\">\n            <el-upload\n              ref=\"upload\"\n              class=\"upload-demo\"\n              action\n              :on-change=\"handleChange\"\n              :on-remove=\"handleRemove\"\n              :file-list=\"fileList\"\n              :http-request=\"fileupload\"\n              :limit=\"1\"\n              :before-upload=\"beforeAvatarUpload\"\n            >\n              <el-button size=\"small\" type=\"primary\">Select</el-button>\n              <div slot=\"tip\" class=\"el-upload__tip\">\n                Good news! You can upload files up to 2 MB at a time.\n              </div>\n            </el-upload>\n          </el-form-item>\n        </el-form>\n        <el-button @click=\"submitForm('form')\" size=\"small\" type=\"primary\"\n          >Upload</el-button\n        >\n      </div>\n    </el-card>\n    <el-card class=\"home_card\">\n      <el-table\n        empty-text=\"No Data\"\n        :data=\"tableData\"\n        border\n        style=\"width: 100%\"\n      >\n        <el-table-column prop=\"fileName\" label=\"File Name\" width=\"220\">\n        </el-table-column>\n        <el-table-column prop=\"fileHash\" label=\"File Hash\"> </el-table-column>\n        <el-table-column\n          prop=\"txHash\"\n          label=\"Transation Hash\"\n          align=\"center\"\n          width=\"240\"\n        >\n          <template slot-scope=\"scope\">\n            <a\n              class=\"s-color\"\n              target=\"_blank\"\n              :href=\"domain + '/transaction/' + scope.row.txHash\"\n              >{{\n                scope.row.txHash.substr(0, 8) +\n                  '...' +\n                  scope.row.txHash.substr(56, 8)\n              }}</a\n            >\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"createTime\"\n          align=\"center\"\n          label=\"Upload Date\"\n          width=\"220\"\n        >\n          <template slot-scope=\"scope\">\n            {{ $utils.default.HelperTools.getTransDate(scope.row.createTime) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Action\" align=\"center\" width=\"140\">\n          <template slot-scope=\"scope\">\n            <el-button\n              @click=\"openDownload(scope.row.fileHash)\"\n              type=\"text\"\n              size=\"small\"\n              >Download</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n    <!-- <el-button @click=\"open\">Click</el-button> -->\n    <el-card\n      ><div style=\"text-align: center; font-size: 14px;\">\n        This is an online software demo powered by Ontology.\n      </div></el-card\n    >\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { uploadfile } from '@/api/file'\nimport { getFileList, downloadFile } from '@/api/role'\n\nexport default {\n  data() {\n    return {\n      userName: '',\n      ontId: '',\n      fileList: [],\n      localFile: {},\n      form: {\n        password: ''\n      },\n      rules: {\n        password: [\n          {\n            required: true,\n            message: 'Please enter file encryption code',\n            trigger: 'blur'\n          },\n          {\n            pattern: /^[\\S]{6,12}$/,\n            min: 6,\n            max: 12,\n            message: '6~12 characters in length and cannot be empty!',\n            trigger: 'change'\n          }\n        ]\n      },\n      fileObject: null,\n      tableData: [\n        // {\n        //   fileName: '2016-05-02',\n        //   createTime: '王小虎',\n        //   fileHash: '上海市普陀区金沙江路 1518 弄'\n        // },\n        // {\n        //   fileName: '2016-05-04',\n        //   createTime: '王小虎',\n        //   fileHash: '上海市普陀区金沙江路 1517 弄'\n        // },\n        // {\n        //   fileName: '2016-05-01',\n        //   createTime: '王小虎',\n        //   fileHash: '上海市普陀区金沙江路 1519 弄'\n        // },\n        // {\n        //   fileName: '2016-05-03',\n        //   createTime: '王小虎',\n        //   fileHash: '上海市普陀区金沙江路 1516 弄'\n        // }\n      ],\n      domain: process.env.VUE_APP_DOMAIN\n    }\n  },\n  methods: {\n    logOut() {\n      sessionStorage.clear()\n      this.$router.push({ path: '/login' })\n    },\n    test() {\n      const res = this.$utils.default.Encrypt('testpwd')\n      console.log(res)\n      const aaaa = this.$utils.default.Decrypt(res)\n      console.log(aaaa)\n    },\n    handleRemove(file, fileList) {\n      this.fileObject = null\n    },\n    handlePreview(file) {\n      console.log(file)\n    },\n    handleChange(file, fileList) {\n      console.log(file)\n      // this.localFile = file.raw\n      // let reader = new FileReader()\n      // reader.readAsDataURL(this.localFile) // 这里也可以直接写参数event.raw\n\n      // 转换成功后的操作，reader.result即为转换后的DataURL ，\n      // 它不需要自己定义，你可以console.log(reader.result)看一下\n      // reader.onload = () => {\n      //   console.log(reader.result)\n      // }\n    },\n    fileupload(params) {\n      this.fileObject = params.file\n    },\n    beforeAvatarUpload(file) {\n      const isLt2M = file.size / 1024 / 1024 < 2\n      if (!isLt2M) {\n        this.$message.error('Only files within 2 MB are allowed')\n      }\n      return isLt2M\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          if (!this.fileObject) {\n            return this.$message.error('Please select a file!')\n          }\n          this.handlerUpload()\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    async handlerUpload() {\n      let formData = new FormData()\n      formData.append('file', this.fileObject)\n      formData.append('ontId', this.ontId)\n      formData.append(\n        'password',\n        this.$utils.default.Encrypt(this.form.password)\n      )\n\n      let data = formData\n      const loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.2)'\n      })\n      let resapi = await axios.post(\n        process.env.VUE_APP_API + '/api/v1/data/upload',\n        data,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      )\n      // console.log(resapi)\n      const { desc, error, result } = resapi.data\n      if (desc === 'SUCCESS' && error === 0) {\n        loading.close()\n        this.open()\n        this.resetForm('form')\n        this.$refs.upload.clearFiles()\n        this.fileObject = null\n        this.handlerGetFile()\n      } else {\n        loading.close()\n        this.$message({\n          type: 'error',\n          message: 'upload fail, please try again!'\n        })\n      }\n    },\n    open() {\n      this.$alert(\n        'File uploaded successfully! It will be available for access in approximately 2 minutes.',\n        'Tips',\n        {\n          confirmButtonText: 'Confirm',\n          callback: action => {}\n        }\n      )\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    async handlerGetFile() {\n      try {\n        let apires = await getFileList(this.ontId)\n        const { desc, error, result } = apires\n        if (desc === 'SUCCESS' && error === 0) {\n          this.tableData = [...result]\n        }\n      } catch (error) {\n        this.tableData = []\n      }\n    },\n    openDownload(fileHash) {\n      this.$prompt('Please enter file decryption code', 'Tips', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        inputPattern: /^[\\S]{6,12}$/,\n        inputType: 'password',\n        inputErrorMessage: '6~12 characters in length and cannot be empty!'\n      })\n        .then(({ value }) => {\n          // console.log(value)\n          this.handlerDownloadFile(fileHash, value)\n        })\n        .catch(() => {})\n    },\n    async handlerDownloadFile(fileHash, password) {\n      let params = {\n        fileHash,\n        password: this.$utils.default.Encrypt(password)\n      }\n      const loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.2)'\n      })\n      try {\n        let apires = await downloadFile(params)\n        const { error, desc, result } = apires\n        if (error === 0 && desc === 'SUCCESS') {\n          loading.close()\n          window.open(result, '_self')\n        } else {\n          let str = ''\n          if (\n            desc ==\n            'no available fs nodes to download file: no node had commit pdp prove data'\n          ) {\n            str =\n              'Uploading file to ONTFS Test Net right now. Please try again later!'\n          } else if (desc == 'wrong password') {\n            str = 'Wrong decryption code. Please try again.'\n          } else {\n            str = 'Error. Please try again!'\n          }\n          this.$message({\n            type: 'error',\n            message: str\n          })\n          loading.close()\n        }\n      } catch (error) {\n        loading.close()\n      }\n    }\n  },\n  mounted() {\n    this.userName = sessionStorage.getItem('userName')\n    this.ontId = sessionStorage.getItem('ontId')\n    this.handlerGetFile()\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.home {\n  max-width: 1440px;\n  margin: 0 auto;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  .home_card {\n    margin-bottom: 20px;\n  }\n  .accout_header {\n    text-align: right;\n    .account_name {\n      margin-right: 50px;\n    }\n  }\n\n  .file_wrap {\n    width: 100%;\n    max-width: 400px;\n    .upload-demo {\n      height: 150px;\n    }\n  }\n}\n/deep/.el-card__body {\n  position: relative;\n  h1 {\n    position: absolute;\n    left: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n    img {\n      width: 110px;\n    }\n  }\n}\na.s-color {\n  color: #409eff;\n  cursor: pointer;\n}\n/deep/.el-upload {\n  transform: translateX(150px;);\n}\n</style>\n"]}]}